.container-fluid.mt-4(x-authredirect:unauthed="/sign")
  .row
    .col-auto.width-150px.height-120px(x-data="gameBalls")
      .card.h-100.w-100.bg-danger
        .card-body.py-2.px-2
          .hstack.gap-2
            .hstack(x-autoanimate)
              template(:key="ball")&attributes({"x-for": "ball in balls.slice(0,1)"})
                div
                  .barrel-shadow
                  .barrel-lg(x-text="ball")
            .vstack.gap-1(x-autoanimate)
              template(:key="ball")&attributes({"x-for": "(ball, index) in balls"})
                template(x-if="index >= 1 && index <= 3")
                  .barrel-sm(x-text="ball")

    .col.height-120px(x-data="gamePlayerProgress")
      .card.h-100.w-100
        .card-body.w-100.h-100
          h5.card-title.text-truncate(
            x-text="$store.loc.l.pageGame.playersProgress"
          )
          .h-100.w-100
            .vstack.gap-2.w-100
              template(:key="index")&attributes({"x-for": "(playerCouple, index) in playersProgress"})
                .w-100.hstack.h-50.gap-2
                  template(:key="player.id")&attributes({"x-for": "(player, index) in playerCouple"})
                    .progress.shadow.w-100(
                      role="progressbar",
                      :aria-label="player.login",
                      :aria-valuenow="Math.max(...player.progress)",
                      aria-valuemin="0",
                      aria-valuemax="90"
                    )
                      .progress-bar.overflow-visible.bg-danger.text-dark.ps-1.text-truncate(
                        :style="`width: ${(Math.max(...player.progress) / 15) * 100}%;`",
                        x-text="player.login.substring(0, 6) + '...'"
                      )
  .row(x-data="gameCards")
    template(x-if="cards.length !== 0")
      template(
        x-if="true",
        x-data="gameSelectedBalls({cardIds: cards.map(({id}) => id)})"
      )
        template(:key="card.id")&attributes({"x-for": "card in cards"})
          .col-12.mt-3
            .card
              .card-body
                table.card.mb-0.lotto-table
                  template&attributes({"x-for": "(row, rowIndex) in card.board"})
                    .hstack
                      template&attributes({"x-for": "(cell, cellIndex) in row"})
                        .card(x-bind="gameCardCell")
  .row.mt-3
    .col
      button.btn.btn-danger.w-100(
        x-bind="exitButton",
        type="button",
        x-text="$store.loc.l.pageGame.actions.leave"
      )
