include ../componentNavbar/_

.vstack.h-100(x-authredirect:unauthed="/sign")
  +navbar
    li.nav-item.ms-auto
      +profileButton.nav-link.py-0
        i.bi.bi-person-circle.me-1
        span(x-text="$store.loc.l.pageMain.actions.profile")
  .container-fluid.mt-5.h-100(x-autoanimate, x-init="$store.user.refresh()")
    template(x-if="$store.user.roomId")
      .row
        .col.pb-3
          a.btn.btn-danger.w-100(x-link.replace, href="/room/await")
            i.bi.bi-play.me-2
            span(x-text="$store.loc.l.pageMain.actions.continue")
    template(x-if="$store.user.gameId")
      .row
        .col.pb-3
          a.btn.btn-danger.w-100(x-link.replace, href="/game")
            i.bi.bi-play.me-2
            span(x-text="$store.loc.l.pageMain.actions.continue")
    template(x-if="!$store.user.gameId && !$store.user.roomId")
      .row
        .col.pb-3
          a.btn.btn-danger.w-100(x-link.replace, href="/room/all")
            i.bi.bi-joystick.me-2
            span(x-text="$store.loc.l.pageMain.actions.joinGames")
    .row
      .col.pb-3
        a.btn.btn-danger.w-100(x-link.replace, href="/rules")
          i.bi.bi-info-circle.me-2
          span(x-text="$store.loc.l.pageMain.actions.rules")

  .container-fluid.pb-4
    .card.mt-5(x-data="leaderboard")
      .card-body
        .hstack.align-items-center.gap-2.mb-2
          h4.card-title.me-auto(
            x-text="$store.loc.l.pageMain.leaderboard.title"
          )
          .hstack.gap-2
            button.btn.btn-sm.btn-danger.w-100(
              x-show="didFail",
              @click="load()",
              x-text="$store.loc.l.pageMain.leaderboard.retry"
            )
              i.bi.bi-arrow-repeat
            button.btn.btn-sm.btn-danger(
              x-show="!didFail",
              @click="load(true)",
              :disabled="rankList.page <= 1 || isLoading"
            )
              i.bi.bi-chevron-compact-left
            button.btn.btn-sm.btn-danger(
              x-show="!didFail",
              @click="load(false)",
              :disabled="(rankList[rating].length && rankList[rating].length < 10) || isLoading"
            )
              i.bi.bi-chevron-compact-right
        .btn-group.w-100(role="group", x-id="['skillRating', 'winRating']")
          input.btn-check(
            type="radio",
            autocomplete="off",
            x-model="rating",
            value="skillRating",
            :id="$id('skillRating')"
          )
          label.btn.btn-sm.btn-outline-dark(
            :for="$id('skillRating')",
            x-text="$store.loc.l.pageMain.leaderboard.skillRating"
          )
          input.btn-check(
            type="radio",
            autocomplete="off",
            x-model="rating",
            value="winRating",
            :id="$id('winRating')"
          )
          label.btn.btn-sm.btn-outline-dark(
            :for="$id('winRating')",
            x-text="$store.loc.l.pageMain.leaderboard.winRating"
          )
        ul.list-group.overflow-hidden.mt-2(x-autoanimate)
          template(:key="stat.login")&attributes({ "x-for": "stat, index in [...rankList[rating], ]" })
            li.list-group-item.d-flex.justify-content-between.align-items-center(
              :class="{ 'text-success': $store.user.login === stat.login }"
            )
              span(x-html="`${rankList.page * (index + 1)}.&nbsp;`")
              .fw-bold.text-truncate.flex-grow-1(x-text="stat.login")
              .badge.bg-success(x-text="Math.round(stat.stat * 100) / 100")
          template(
            x-if="(rankList.selfRating[rating] && rankList[rating].findIndex(({login}) => login === $store.user.login) === -1)"
          )
            li.list-group-item.d-flex.justify-content-between.align-items-center.bg-transparent.border-top-0
              span ..&nbsp;&nbsp;
              .fw-bold.text-truncate.flex-grow-1(x-text="$store.user.login")
              .badge.bg-success(
                x-text="Math.round(rankList.selfRating[rating] * 100) / 100"
              )
