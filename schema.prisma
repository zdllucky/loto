// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                       String           @id @default(cuid())
  login                    String           @unique @default("")
  role                     UserRoleType     @default(user)
  room                     Room?            @relation("User_room", fields: [roomId], references: [id])
  roomId                   String?          @map("room")
  game                     Game?            @relation("User_game", fields: [gameId], references: [id])
  gameId                   String?          @map("game")
  password                 String
  createdAt                DateTime?        @default(now())
  from_PlayerBallBind_user PlayerBallBind[] @relation("PlayerBallBind_user")
  from_Card_user           Card[]           @relation("Card_user")

  @@index([roomId])
  @@index([gameId])
}

model Room {
  id        String    @id @default(cuid())
  speed     Int?
  bots      Bot[]     @relation("Bot_room")
  users     User[]    @relation("User_room")
  createdAt DateTime? @default(now())
}

model Bot {
  id                      String           @id @default(cuid())
  login                   String           @unique @default("")
  room                    Room?            @relation("Bot_room", fields: [roomId], references: [id])
  roomId                  String?          @map("room")
  game                    Game?            @relation("Bot_game", fields: [gameId], references: [id])
  gameId                  String?          @map("game")
  from_PlayerBallBind_bot PlayerBallBind[] @relation("PlayerBallBind_bot")
  from_Card_bot           Card[]           @relation("Card_bot")

  @@index([roomId])
  @@index([gameId])
}

model Game {
  id              String           @id @default(cuid())
  speed           Int              @default(2)
  users           User[]           @relation("User_game")
  bots            Bot[]            @relation("Bot_game")
  createdAt       DateTime?        @default(now())
  step            Int              @default(0)
  balls           Json?            @default("[52,47,17,69,5,41,1,6,32,85,10,49,28,13,83,42,45,21,12,87,45,38,3,12,10,77,63,16,38,28,2,7,45,76,36,28,67,85,89,70,30,60,88,57,30,62,83,44,6,65,61,36,45,74,35,54,80,15,72,3,88,20,84,78,30,35,52,81,69,35,56,73,66,80,17,84,38,77,54,14,84,4,49,61,65,39,72,58,52,40]")
  playerBallBinds PlayerBallBind[] @relation("PlayerBallBind_game")
  from_Card_game  Card[]           @relation("Card_game")
}

model PlayerBallBind {
  id        String    @id @default(cuid())
  user      User?     @relation("PlayerBallBind_user", fields: [userId], references: [id])
  userId    String?   @map("user")
  bot       Bot?      @relation("PlayerBallBind_bot", fields: [botId], references: [id])
  botId     String?   @map("bot")
  number    Int
  card      Card?     @relation("PlayerBallBind_card", fields: [cardId], references: [id])
  cardId    String?   @map("card")
  createdAt DateTime? @default(now())
  game      Game?     @relation("PlayerBallBind_game", fields: [gameId], references: [id])
  gameId    String?   @map("game")

  @@index([userId])
  @@index([botId])
  @@index([number])
  @@index([cardId])
  @@index([gameId])
}

model Card {
  id                       String           @id @default(cuid())
  game                     Game?            @relation("Card_game", fields: [gameId], references: [id])
  gameId                   String?          @map("game")
  user                     User?            @relation("Card_user", fields: [userId], references: [id])
  userId                   String?          @map("user")
  bot                      Bot?             @relation("Card_bot", fields: [botId], references: [id])
  botId                    String?          @map("bot")
  numbers                  Json?
  board                    Json?
  from_PlayerBallBind_card PlayerBallBind[] @relation("PlayerBallBind_card")

  @@index([gameId])
  @@index([userId])
  @@index([botId])
}

enum UserRoleType {
  admin
  user
}

generator zod {
  provider              = "zod-prisma"
  output                = "./rest/zod"
  relationModel         = true
  modelCase             = "PascalCase"
  modelSuffix           = "Model"
  useDecimalJs          = true
  prismaJsonNullability = true
}
