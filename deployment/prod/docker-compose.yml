version: '3.7'

services:
  database:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ~/data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    links:
      - database
      - redis
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    build:
      context: ../..
      dockerfile: server/docker/Dockerfile
      args:
        ADMIN_URL: ${ADMIN_URL}
        FRONTEND_URL: ${FRONTEND_URL}
        COOKIE_SECRET: ${COOKIE_SECRET}
        DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
        REDIS_HOST: redis
    ports:
      - "3000:3000"
    restart: always
  frontend:
    build:
      context: ../../client
      dockerfile: docker/Dockerfile
      args:
        VITE_BASE_PATH: ${VITE_BASE_PATH}
    restart: always
    volumes:
      - ../caddy/Caddyfile:/etc/caddy/Caddyfile
      - ~/caddy_data:/data
    ports:
      - "80:80"
      - "443:443"